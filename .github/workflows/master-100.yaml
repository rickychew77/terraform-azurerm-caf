#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: scenarios-100

on:
  pull_request:
    paths-ignore:
      - .github/workflows/master-200.yaml
      - 'documentation/**'
      - '_pictures/**'
      - 'README.md'
      - 'CHANGELOG.md'
  schedule:
    - cron:  '0 3 * * *'

env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-auto-approve -refresh=false'
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  foundations:
    name: foundations
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
          region: ["southeastasia"]
          random_length: ['5']

    container:
      image: aztfmod/roverdev:2010.220257
      options: --user 0

    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          repository: Azure/caf-terraform-landingzones
          path: public
          ref: '0.4'

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"

      - name: launchpad
        run: |
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_launchpad -a apply \
            -var-folder ${GITHUB_WORKSPACE}/public/landingzones/caf_launchpad/scenario/100 \
            -level level0 \
            -launchpad \
            -parallelism=30 \
            --environment ${{ github.run_id }} \
            '-var random_length=${{ matrix.random_length }}' \
            '-var prefix=g${{ github.run_id }}' \
            '-var regions={region1="${{ matrix.region }}"}' \
            '-var tags={testing_job_id="${{ github.run_id }}"}'


      # - name: foundations
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_foundations -a apply \
      #       -level level1 \
      #       --environment ${{ github.run_id }}

      # - name: shared_services
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_shared_services -a apply \
      #       -level level2 \
      #       --environment ${{ github.run_id }}

      # - name: networking_hub
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_networking -a apply \
      #       -level level2 \
      #       -tfstate networking_hub.tfstate \
      #       -var-folder ${GITHUB_WORKSPACE}/public/landingzones/caf_networking/scenario/100-single-region-hub \
      #       --environment ${{ github.run_id }}

  examples:
    name: examples
    runs-on: ubuntu-latest

    needs: foundations

    strategy:
      fail-fast: false
      matrix:
          config_files: [
            "examples/app_insights/100-all-attributes",
            "examples/app_insights/100-simple",
            "examples/compute/container_registry/100-simple-acr",
            "examples/compute/virtual_machine/100-single-linux-vm",
            "examples/compute/virtual_machine/101-single-windows-vm",
            "examples/networking/virtual_network/100-subnet-delegation",
            "examples/databricks/100-simple-databricks",
            "examples/networking/private_dns/100-private-dns-vnet-links",
            "examples/redis_cache/100-redis-standard",
            "examples/machine_learning/100-aml",
            "examples/machine_learning/101-aml-vnet",
            "examples/datalake/101-datalake-storage",
            "examples/synapse_analytics/100-synapse",
            "examples/synapse_analytics/101-synapse-sparkpool",
            "examples/monitoring/service_health_alerts",
            "examples/mssql_server/elastic_pools",
            "examples/webapps/appservice/101-appservice-simple",
            "examples/webapps/appservice/102-appservice-slots",
            "examples/webapps/appservice/103-appservice-extend",
            "examples/webapps/appservice/104-appservice-appinsight"
          ]

    container:
      image: aztfmod/roverdev:2010.220257
      options: --user 0

    steps:
      - uses: actions/checkout@v2

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: deploy example
        run: |
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/examples -a apply \
            -level level3 \
            -tfstate $(basename ${{ matrix.config_files }}).tfstate \
            -var-folder ${GITHUB_WORKSPACE}/${{ matrix.config_files }} \
            --environment ${{ github.run_id }}

      - name: destroy example
        if: always()
        run: |
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/examples -a destroy \
            -level level3 \
            -tfstate $(basename ${{ matrix.config_files }}).tfstate \
            -var-folder ${GITHUB_WORKSPACE}/${{ matrix.config_files }} \
            --environment ${{ github.run_id }} \
            -auto-approve


  foundations_destroy:
    name: foundations_destroy
    runs-on: ubuntu-latest
    if: always()
    needs: examples

    strategy:
      fail-fast: false
      matrix:
          region: ["southeastasia"]

    container:
      image: aztfmod/roverdev:2010.220257
      options: --user 0

    steps:
      - uses: actions/checkout@v2
        with:
          repository: Azure/caf-terraform-landingzones
          path: public
          ref: "0.4"

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

          echo "local user: $(whoami)"

      # - name: networking_hub
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_networking -a destroy \
      #       -level level2 \
      #       -var-folder ${GITHUB_WORKSPACE}/public/landingzones/caf_networking/scenario/100-single-region-hub \
      #       --environment ${{ github.run_id }} \
      #       -auto-approve

      # - name: shared_services
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_shared_services -a destroy \
      #       -level level2 \
      #       --environment ${{ github.run_id }} \
      #       -auto-approve

      # - name: foundations
      #   run: |
      #     /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_foundations -a destroy \
      #       -level level1 \
      #       --environment ${{ github.run_id }} \
      #       -auto-approve

      - name: Remove launchpad
        run: |

          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/landingzones/caf_launchpad/ -a destroy \
            -level level0 \
            -var-folder ${GITHUB_WORKSPACE}/public/landingzones/caf_launchpad/scenario/100 \
            -launchpad \
            --environment ${{ github.run_id }} \
            -parallelism=30 \
            '-var prefix=g${{ github.run_id }}' \
            '-var regions={region1="${{ matrix.region }}"}' \
            '-var tags={testing_job_id="${{ github.run_id }}"}' \
            -auto-approve


      - name: Complete purge
        if: ${{ always() }}
        run: |
          for i in `az monitor diagnostic-settings subscription list -o tsv --query "value[?contains(name, '${{ github.run_id }}' )].name"`; do echo "purging subscription diagnostic-settings: $i" && $(az monitor diagnostic-settings subscription delete --name $i --yes); done
          for i in `az monitor log-profiles list -o tsv --query '[].name'`; do az monitor log-profiles delete --name $i; done
          for i in `az ad group list --query "[?contains(displayName, '${{ github.run_id }}')].objectId" -o tsv`; do echo "purging Azure AD group: $i" && $(az ad group delete --verbose --group $i || true); done
          for i in `az ad app list --query "[?contains(displayName, '${{ github.run_id }}')].appId" -o tsv`; do echo "purging Azure AD app: $i" && $(az ad app delete --verbose --id $i || true); done
          for i in `az keyvault list-deleted --query "[?tags.environment=='${{ github.run_id }}'].name" -o tsv`; do az keyvault purge --name $i; done
          for i in `az group list --query "[?tags.environment=='${{ github.run_id }}'].name" -o tsv`; do echo "purging resource group: $i" && $(az group delete -n $i -y --no-wait || true); done
          for i in `az role assignment list --query "[?contains(roleDefinitionName, '${{ github.run_id }}')].roleDefinitionName" -o tsv`; do echo "purging role assignment: $i" && $(az role assignment delete --role $i || true); done
          for i in `az role definition list --query "[?contains(roleName, '${{ github.run_id }}')].roleName" -o tsv`; do echo "purging custom role definition: $i" && $(az role definition delete --name $i || true); done
